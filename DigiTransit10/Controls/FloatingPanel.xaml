<UserControl
    x:Class="DigiTransit10.Controls.FloatingPanel"
    x:Name="ThisFloatingPanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:DigiTransit10.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Behaviors="using:Template10.Behaviors"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:Media="using:Microsoft.Xaml.Interactions.Media"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">
    
    <Grid x:Name="PanelGrid"
          Background="{x:Bind Background, Mode=OneWay}"
          Height="10">
        <Grid.RenderTransform>
            <CompositeTransform/>
        </Grid.RenderTransform>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="FloatingPanelStateGroup">
                <VisualStateGroup.Transitions>
                    <VisualTransition From="PanelExpanded" GeneratedDuration="0:0:0.5" To="PanelCollapsed">
                        <Storyboard>
                            <DoubleAnimation x:Name="ExpandedTranslationAnimation" Duration="0:0:0.5" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="PanelGrid">
                                <DoubleAnimation.EasingFunction>
                                    <QuarticEase EasingMode="EaseInOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </VisualTransition>
                    <VisualTransition From="PanelCollapsed" GeneratedDuration="0:0:0.5" To="PanelExpanded">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="PanelGrid">
                                <EasingDoubleKeyFrame x:Name="PanelExpandHeightValue" KeyTime="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimation x:Name="PanelExpandTranslateStart" Duration="0:0:0.5" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" Storyboard.TargetName="PanelGrid">
                                <DoubleAnimation.EasingFunction>
                                    <QuarticEase EasingMode="EaseInOut"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </VisualTransition>
                </VisualStateGroup.Transitions>

                <VisualState x:Name="PanelExpanded">
                    <Storyboard x:Name="ExpandedHeightStoryboard">
                        <ObjectAnimationUsingKeyFrames EnableDependentAnimation="True" Storyboard.TargetName="PanelGrid" Storyboard.TargetProperty="Height">
                            <DiscreteObjectKeyFrame x:Name="ExpandedHeightKeyFrame" KeyTime="0"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="PanelCollapsed">
                    <Storyboard x:Name="CollapsedHeightStoryboard">
                        <ObjectAnimationUsingKeyFrames EnableDependentAnimation="True" Duration="0:0:0" Storyboard.TargetName="PanelGrid" Storyboard.TargetProperty="Height">
                            <DiscreteObjectKeyFrame x:Name="CollapsedHeightKeyFrame" KeyTime="0"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>

            <VisualStateGroup x:Name="GrabHandleStateGroup">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="MouseOver">
                    <VisualState.Setters>
                        <Setter Target="GrabHandleHighlight.(UIElement.Visibility)" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Grid x:Name="GridGrabHeader"
              Grid.Row="0"
              Height="15"
              HorizontalAlignment="Stretch"                        
              Background="{ThemeResource SystemControlBackgroundAccentBrush}" 
              ManipulationMode="TranslateY"
              ManipulationStarted="GridGrabHeader_ManipulationStarted"
              ManipulationDelta="GridGrabHeader_ManipulationDelta"
              ManipulationCompleted="GridGrabHeader_ManipulationCompleted"
              Tapped="GridGrabHeader_Tapped">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="GrabHandleHighlight" 
                       Grid.RowSpan="2" 
                       Fill="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                       Height="13"                           
                       Opacity=".4"
                       Visibility="Collapsed"/>
            <Rectangle Grid.Row="0" 
                       Fill="White"                           
                       Height="1"                           
                       Margin="0 4 0 0"
                       Width="20"/>
            <Rectangle Grid.Row="1" 
                       Fill="White"
                       Height="1"
                       Margin="0 0 0 4"
                       Width="20"/>
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="PointerEntered">
                    <Core:GoToStateAction StateName="MouseOver"/>
                </Core:EventTriggerBehavior>
                <Core:EventTriggerBehavior EventName="PointerExited">
                    <Core:GoToStateAction StateName="Normal"/>
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Grid>

        <ContentControl x:Name="PanelContent"
                        Grid.Row="1"                                                  
                        Content="{x:Bind InnerContent, Mode=OneWay}"
                        HorizontalContentAlignment="Stretch"/>
    </Grid>
</UserControl>
