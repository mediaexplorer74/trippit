<lclCtls:AnimatedPage
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:controls="using:Template10.Controls"
    xmlns:lclCtls="using:DigiTransit10.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    
    xmlns:vm="using:DigiTransit10.ViewModels"
    xmlns:lclBhvrs="using:DigiTransit10.Behaviors"
    xmlns:ctlVms="using:DigiTransit10.ViewModels.ControlViewModels"
    xmlns:models="using:DigiTransit10.Models"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    x:Class="DigiTransit10.Views.MainPage"    
    x:Name="ThisMainPage"
    
    mc:Ignorable="d"
    d:DesignHeight="900"
    d:DesignWidth="500"
    DataContext="{Binding Path=Main, Source={StaticResource Locator}}">

    <Page.Resources>
        <ResourceDictionary>

            <DataTemplate x:Key="TopPanelHalf" x:Name="TopPanelHalfTemplate" x:DataType="vm:TripFormViewModel">
                <StackPanel>
                    <lclCtls:DigiTransitSearchBox x:Name="FromBox"                                                     
                                                  Header="{Binding MainPage_FromHeader, Source={StaticResource Strings}}"                                                  
                                                  SelectedPlace="{x:Bind FromPlace, Mode=TwoWay}"/>
                    <Button x:Name="SwapButton"
                                        Background="Transparent"
                                        Command="{x:Bind SwapFirstLocationCommand}"
                                        CommandParameter="{x:Bind FromPlace, Mode=OneWay}"
                                        Content="&#xE13C;"
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        FontSize="20"
                                        Height="40" Width="40"
                                        Margin="0 5 0 0"
                                        HorizontalAlignment="Center" 
                                        RenderTransformOrigin="0.5,0.5"
                                        Style="{ThemeResource NavigationBackButtonNormalStyle}">
                        <Button.RenderTransform>
                            <CompositeTransform Rotation="90"/>
                        </Button.RenderTransform>
                    </Button>

                    <ListView x:Name="SearchBoxesList"                              
                              ItemsSource="{x:Bind IntermediatePlaces, Mode=OneWay, FallbackValue={x:Null}}"
                              SelectionMode="None">
                        <ListView.ItemTemplate>
                            <DataTemplate x:DataType="ctlVms:IntermediateSearchViewModel">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <lclCtls:DigiTransitSearchBox x:Name="ListIntermediateDestination"
                                                                  SelectedPlace="{x:Bind IntermediatePlace, Mode=TwoWay}"/>
                                    <Button x:Name="RemoveItemButton"                                            
                                            Grid.Row="0" Grid.Column="1"                                            
                                            Click="IntermediatePlaceRemoved_Click"
                                            Content="&#xE10A;"                                            
                                            Height="{StaticResource TallTextBoxHeight}"                                            
                                            Margin="0 0 -10 0"
                                            VerticalAlignment="Bottom"
                                            HorizontalContentAlignment="Center"
                                            Width="45"
                                            Style="{ThemeResource NavigationBackButtonNormalStyle}"/>

                                    <Button x:Name="SwapButton"
                                            Grid.Row="1" Grid.ColumnSpan="2"
                                            Command="{x:Bind SwapLocationsCommand}"
                                            Content="&#xE13C;"
                                            FontSize="20"
                                            Height="40" Width="40"
                                            Margin="0 5 0 0"
                                            HorizontalAlignment="Center" 
                                            RenderTransformOrigin="0.5,0.5"
                                            Style="{ThemeResource NavigationBackButtonNormalStyle}">
                                        <Button.RenderTransform>
                                            <CompositeTransform Rotation="90"/>
                                        </Button.RenderTransform>
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="Padding" Value="0"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>

                    <lclCtls:DigiTransitSearchBox x:Name="ToBox"
                                                  Margin="0 -20 0 0"
                                                  Header="{Binding MainPage_ToHeader, Source={StaticResource Strings}}"
                                                  SelectedPlace="{x:Bind ToPlace, Mode=TwoWay}">
                        <lclCtls:DigiTransitSearchBox.Transitions>
                            <TransitionCollection>
                                <RepositionThemeTransition/>
                            </TransitionCollection>
                        </lclCtls:DigiTransitSearchBox.Transitions>
                    </lclCtls:DigiTransitSearchBox>
                    <Button x:Name="AddDestinationButton"                                        
                            Command="{x:Bind AddIntermediatePlaceCommand}"
                            Content="{Binding Source={StaticResource Strings}, Path=MainPage_AddIntermediateDestination}"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Left"
                            Margin="0 5 0 0"
                            Padding="0 4 0 4"
                            Style="{ThemeResource TextBlockButtonStyle}">
                        <Button.Transitions>
                            <TransitionCollection>
                                <RepositionThemeTransition/>
                            </TransitionCollection>
                        </Button.Transitions>
                    </Button>

                    <TextBlock x:Name="TimeHeader"                                                                                                       
                                Margin="0 10 0 5"
                                Text="{Binding Source={StaticResource Strings}, Path=LiteralTime}">
                        <TextBlock.Transitions>
                            <TransitionCollection>
                                <RepositionThemeTransition/>
                            </TransitionCollection>
                        </TextBlock.Transitions>
                    </TextBlock>

                    <lclCtls:CurrentTimePicker x:Name="TimePicker"                                                                                         
                                               HorizontalAlignment="Stretch"                                    
                                               Time="{x:Bind SelectedTime, Mode=TwoWay}"
                                               UseCurrentTime="{x:Bind IsUsingCurrentTime, Mode=TwoWay}">
                        <lclCtls:CurrentTimePicker.Transitions>
                            <TransitionCollection>
                                <RepositionThemeTransition/>
                            </TransitionCollection>
                        </lclCtls:CurrentTimePicker.Transitions>
                    </lclCtls:CurrentTimePicker>

                    <TextBlock x:Name="SelectedTimeInPastWarningTextBlock"
                               Foreground="PaleGoldenrod"
                               Margin="0 5 0 0"
                               Text="{Binding Source={StaticResource Strings}, Path=MainPage_TimeInPastWarning}"
                               TextTrimming="Clip"
                               TextWrapping="WrapWholeWords"
                               Visibility="{x:Bind IsSelectedDateTimeInPast, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                </StackPanel>
            </DataTemplate>

            <DataTemplate x:Key="BottomPanelHalf" x:DataType="vm:TripFormViewModel">
                <Grid HorizontalAlignment="Stretch"
                      Margin="0 10 0 0"
                      VerticalAlignment="Stretch">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid x:Name="TransitContentPanel" 
                          Grid.Row="0"
                          Visibility="{x:Bind IsTransitPanelVisible, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                          HorizontalAlignment="Stretch"
                          Margin="0 0 0 10">

                        <Interactivity:Interaction.Behaviors>
                            <lclBhvrs:AnimateVisibilityBehavior/>
                        </Interactivity:Interaction.Behaviors>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="65"/>
                            <RowDefinition Height="65"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <TextBlock x:Name="DateHeader"                                                                               
                                       Grid.Row="0" Grid.Column="0"
                                       Grid.ColumnSpan="3"
                                   Margin="0 0 0 5"
                                       Text="{Binding LiteralDate, Source={StaticResource Strings}}"/>

                        <lclCtls:CurrentDatePicker x:Name="DatePicker"
                                                   Grid.Row="1" Grid.Column="0"
                                                   Grid.ColumnSpan="3"
                                                   Date="{x:Bind SelectedDate, Mode=TwoWay}"
                                                   UseCurrentDate="{x:Bind IsUsingCurrentDate, Mode=TwoWay}"
                                                   HorizontalAlignment="Stretch"/>

                        <Grid x:Name="RouteOptimizationPanel"
                                   Grid.Row="2" Grid.ColumnSpan="3"
                                   Visibility="{x:Bind IsTransitPanelVisible, Converter={StaticResource BoolToVisibilityConverter}, Mode=OneWay}"
                                   HorizontalAlignment="Stretch"
                                   Margin="0 10 0 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <ComboBox x:Name="WalkingAmountComboBox"
                                      Grid.Column="0"
                                      DisplayMemberPath="DisplayName"
                                      HorizontalAlignment="Stretch"
                                      Header="{Binding Source={StaticResource Strings}, Path=TripForm_WalkingAmountHeader}"
                                      ItemsSource="{x:Bind WalkingAmounts}"
                                      SelectedItem="{Binding SelectedWalkingAmount, Mode=TwoWay}"
                                      Margin="0 0 5 0"/>
                            <ComboBox x:Name="WalkingSpeedComboBox"                                                                             
                                      Grid.Column="1"
                                      HorizontalAlignment="Stretch"
                                      Header="{Binding Source={StaticResource Strings}, Path=TripForm_WalkingSpeedHeader}"
                                      ItemsSource="{x:Bind WalkingSpeeds}"
                                      SelectedItem="{Binding SelectedWalkingSpeed, Mode=TwoWay}"
                                      Margin="5 0 0 0">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate x:DataType="models:WalkingSpeed">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{x:Bind DisplayName}"/>
                                            <TextBlock Foreground="Gray" FontStyle="Italic" Margin="5 0 0 0" Text="{x:Bind DisplaySubtitle}"/>
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>

                            <Interactivity:Interaction.Behaviors>
                                <lclBhvrs:AnimateVisibilityBehavior/>
                            </Interactivity:Interaction.Behaviors>

                        </Grid>

                        <TextBlock x:Name="TransitTypeHeader" 
                                       Grid.Row="3"
                                       Grid.Column="0"
                                       Grid.ColumnSpan="3"
                                       Margin="0 10 0 -5"
                                       Text="{Binding Source={StaticResource Strings}, Path=TripForm_TransitTypeHeader}"/>

                        <CheckBox x:Name="BusCheckBox"                                                      
                                      Grid.Row="4" Grid.Column="0" MinWidth="100"
                                      IsChecked="{x:Bind IsBusChecked, Mode=TwoWay}">
                            <FontIcon FontFamily="{StaticResource HslPiktoFrameFont}"
                                          Foreground="{StaticResource HslBusBlueBrush}"                                                              
                                          FontSize="50"                                                              
                                          Glyph="{Binding BusIcon, Source={StaticResource FontIcons}}"/>
                        </CheckBox>
                        <CheckBox x:Name="TramCheckBox"                                                       
                                      Grid.Row="4" Grid.Column="1" MinWidth="100"
                                      IsChecked="{x:Bind IsTramChecked, Mode=TwoWay}">
                            <FontIcon FontFamily="{StaticResource HslPiktoFrameFont}"
                                          Foreground="{StaticResource HslTramGreenBrush}"
                                          FontSize="50"
                                          Glyph="{Binding TramIcon, Source={StaticResource FontIcons}}"/>
                        </CheckBox>
                        <CheckBox x:Name="TrainCheckBox" 
                                      Grid.Row="4" Grid.Column="2" MinWidth="100"
                                      IsChecked="{x:Bind IsTrainChecked, Mode=TwoWay}">
                            <FontIcon FontFamily="{StaticResource HslPiktoFrameFont}"
                                          Foreground="{StaticResource HslTrainPurpleBrush}"
                                          FontSize="50"
                                          Glyph="{Binding TrainIcon, Source={StaticResource FontIcons}}"/>
                        </CheckBox>
                        <CheckBox x:Name="MetroCheckBox" 
                                      Grid.Row="5" Grid.Column="0" MinWidth="100"
                                      IsChecked="{x:Bind IsMetroChecked, Mode=TwoWay}">
                            <FontIcon FontFamily="{StaticResource HslPiktoFrameFont}"
                                          Foreground="{Binding Source={StaticResource HslMetroOrangeBrush}}"
                                          FontSize="50"
                                          Glyph="{Binding MetroIcon, Source={StaticResource FontIcons}}" />
                        </CheckBox>
                        <CheckBox x:Name="FerryCheckBox"
                                      Grid.Row="5" Grid.Column="1" MinWidth="100"
                                      IsChecked="{x:Bind IsFerryChecked, Mode=TwoWay}">
                            <FontIcon FontFamily="{StaticResource HslPiktoFrameFont}" 
                                          Foreground="{Binding Source={StaticResource HslFerryBlueBrush}}"
                                          FontSize="50" 
                                          Glyph="{Binding FerryIcon, Source={StaticResource FontIcons}}"/>
                        </CheckBox>
                        <CheckBox x:Name="BikeCheckBox"
                                      Grid.Row="5" Grid.Column="2" MinWidth="100"
                                      IsChecked="{x:Bind IsBikeChecked, Mode=TwoWay}">
                            <FontIcon FontFamily="{StaticResource HslPiktoFrameFont}" 
                                          Foreground="{Binding Source={StaticResource HslBikeGoldenrodBrush}}"
                                          FontSize="50" 
                                          Glyph="{Binding BikeIcon, Source={StaticResource FontIcons}}"/>
                        </CheckBox>
                    </Grid>

                    <Button x:Name="HideShowOptionsButton"                                          
                            Grid.Row="1"
                            Click="HideShowOptionsButton_Click"
                            HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Left"
                            Padding="0 4"
                            Style="{StaticResource TextBlockButtonStyle}">
                        <Button.Transitions>
                            <TransitionCollection>
                                <RepositionThemeTransition/>
                            </TransitionCollection>
                        </Button.Transitions>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock FontSize="20" Text="{x:Bind ShowHideTransitPanelText, Mode=OneWay}"/>
                            <TextBlock FontFamily="{ThemeResource SymbolThemeFontFamily}" Margin="5 3 0 0" VerticalAlignment="Center" Text ="{x:Bind ShowHideTransitPanelGlyph, Mode=OneWay}"/>
                        </StackPanel>
                    </Button>

                    <ListView x:Name="PinnedFavoritesControl"
                              Grid.Row="2"                              
                              AllowDrop="True"
                              CanReorderItems="True"                                  
                              IsItemClickEnabled="True"
                              ItemClick="PinnedFavoritesControl_OnItemClick"                              
                              ItemsSource="{Binding PinnedFavorites, Mode=TwoWay}"
                              Margin="0 10 0 0"
                              SelectionMode="None"                          
                              Visibility="{x:Bind PinnedFavorites.Count, Mode=OneWay, Converter={StaticResource EmptyNullToVisibilityConverter}}"
                              RightTapped="PinnedFavoritesControl_OnRightTapped">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="9*"/>
                                        <ColumnDefinition Width="1*"/>
                                    </Grid.ColumnDefinitions>
                                    <FontIcon x:Name="FavoriteIcon"
                                               Grid.Column="0"
                                               FontFamily="{Binding IconFontFace}"
                                               FontSize="{Binding IconFontSize}"
                                               Glyph="{Binding FontIconGlyph}"/>
                                    <TextBlock x:Name="FavoriteName" 
                                                Grid.Column="1"                              
                                                Margin="10 0 0 0"
                                                Text="{Binding UserChosenName}"
                                                TextTrimming="CharacterEllipsis"
                                                VerticalAlignment="Center"/>
                                    <FontIcon x:Name="ArrowIcon"
                                               Grid.Column="2"                     
                                               Foreground="{ThemeResource SystemAccentColor}"
                                               FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                               Glyph="{Binding Source={StaticResource FontIcons}, Path=RightArrow}"
                                               HorizontalAlignment="Right"/>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.Transitions>
                            <TransitionCollection>
                                <RepositionThemeTransition/>
                            </TransitionCollection>
                        </ListView.Transitions>
                        <ListView.Header>
                            <TextBlock>
                                <Run FontFamily="{ThemeResource SymbolThemeFontFamily}" 
                                     Text="{Binding Source={StaticResource FontIcons}, Path=Thumbtack}"/>
                                <Run Text="{Binding Source={StaticResource Strings}, Path=TripForm_PinnedFavoritesHeader}"/>
                            </TextBlock>
                        </ListView.Header>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <FlyoutBase.AttachedFlyout>
                            <MenuFlyout>
                                <MenuFlyoutItem x:Name="RemoveItem"
                                                    Text="{Binding Source={StaticResource Strings}, Path=PinnedFavoritesList_Unpin}"
                                                    Command="{x:Bind RemovePinnedFavoriteCommand}"/>
                            </MenuFlyout>
                        </FlyoutBase.AttachedFlyout>
                    </ListView>

                    <Button x:Name="PlanTripButton"
                            Grid.Row="3"
                            VerticalAlignment="Bottom"
                            Margin="0 10 0 10" 
                            Background="{ThemeResource SystemControlBackgroundAccentBrush}"
                            Foreground="White"
                            HorizontalAlignment="Stretch"
                            Content="{Binding TripForm_PlanTripButton, Source={StaticResource Strings}}"
                            Command="{x:Bind PlanTripCommand}">
                        <Button.Transitions>
                            <TransitionCollection>
                                <RepositionThemeTransition/>
                            </TransitionCollection>
                        </Button.Transitions>
                    </Button>
                </Grid>
            </DataTemplate>

            <Storyboard x:Key="FromStoryboard">
                <DoubleAnimation To="200" Duration="00:00:0.333" Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)">
                    <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseIn"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation To="0" Duration="00:00:0.333" Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="Opacity"/>
            </Storyboard>

            <Storyboard x:Key="ToStoryboard">
                <DoubleAnimation To="0" Duration="0:0:0" Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)"/>
                <DoubleAnimation To="1" Duration="00:00:0.333" Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="Opacity"/>
            </Storyboard>

        </ResourceDictionary>
    </Page.Resources>

    <lclCtls:AnimatedPage.FromAnimation>
        <models:PageAnimation ForwardStoryboard="{StaticResource FromStoryboard}"
                              BackStoryboard="{StaticResource FromStoryboard}"/>
    </lclCtls:AnimatedPage.FromAnimation>
    <lclCtls:AnimatedPage.ToAnimation>
        <models:PageAnimation ForwardStoryboard="{StaticResource ToStoryboard}"
                              BackStoryboard="{StaticResource ToStoryboard}"/>
    </lclCtls:AnimatedPage.ToAnimation>

    <RelativePanel x:Name="ContentRoot" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" RenderTransformOrigin="0.5,0.5">
        <RelativePanel.RenderTransform>
            <CompositeTransform/>
        </RelativePanel.RenderTransform>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootContentPanel.Background" Value="{ThemeResource ApplicationPageBackgroundThemeBrush}"/>
                        <Setter Target="NarrowTripView.Visibility" Value="Visible" />
                        <Setter Target="MainPageBottomBar.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="WideHub.Visibility" Value="Visible" />
                        <Setter Target="OpacityRectangle.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="WideHub.Visibility" Value="Visible" />
                        <Setter Target="OpacityRectangle.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:MemorySafePageHeader x:Name="PageHeader" 
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True"
                             Style="{StaticResource PageHeaderBoldStyle}"
                             Text="{Binding MainPage_Header, Source={StaticResource Strings}}">
            <controls:MemorySafePageHeader.PrimaryCommands>
                <AppBarButton x:Name="ViewAlertsButton"         
                              Command="{x:Bind ViewModel.ViewAlertsCommand}"
                              HorizontalAlignment="Stretch"
                              HorizontalContentAlignment="Stretch"
                              Label="{Binding Source={StaticResource Strings}, Path=MainPageHeaderCommand_Alerts}"                              
                              VerticalContentAlignment="Stretch"
                              VerticalAlignment="Stretch"                              
                              Style="{StaticResource BadgeAppBarButtonStyle}">
                    <Grid>
                        <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                  FontSize="20"
                                  Glyph="{Binding Source={StaticResource FontIcons}, Path=WarningTriangle}"/>
                        <Border x:Name="BadgeBorder" 
                                Background="Red"
                                CornerRadius="10"                                                                
                                HorizontalAlignment="Center"                                    
                                Padding="4 0"
                                RenderTransformOrigin="0.5, 0.5"
                                VerticalAlignment="Center"
                                Visibility="{x:Bind ViewModel.AlertCount, Mode=OneWay, Converter={StaticResource EmptyNullToVisibilityConverter}}">
                            <Interactivity:Interaction.Behaviors>
                                <Core:DataTriggerBehavior Binding="{x:Bind ViewModel.AreAlertsFresh, Mode=OneWay}"
                                                          ComparisonCondition="Equal"
                                                          Value="True">
                                    <Core:ChangePropertyAction TargetObject="{x:Bind BadgeBorder}"
                                                               PropertyName="Background"
                                                               Value="Red"/>
                                </Core:DataTriggerBehavior>
                                <Core:DataTriggerBehavior Binding="{x:Bind ViewModel.AreAlertsFresh, Mode=OneWay}"
                                                          ComparisonCondition="Equal"
                                                          Value="False">
                                    <Core:ChangePropertyAction TargetObject="{x:Bind BadgeBorder}"
                                                               PropertyName="Background"
                                                               Value="Gray"/>
                                </Core:DataTriggerBehavior>
                            </Interactivity:Interaction.Behaviors>
                            <TextBlock Foreground="White"
                                       FontSize="12"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Text="{x:Bind ViewModel.AlertCount, Mode=OneWay}"/>
                            <Border.RenderTransform>
                                <CompositeTransform TranslateX="10" TranslateY="10"/>
                            </Border.RenderTransform>
                        </Border>
                    </Grid>
                </AppBarButton>
            </controls:MemorySafePageHeader.PrimaryCommands>
        </controls:MemorySafePageHeader>

        <RelativePanel x:Name="RootContentPanel" 
                       RelativePanel.Below="PageHeader" 
                       RelativePanel.AlignBottomWithPanel="True" 
                       RelativePanel.AlignRightWithPanel="True"
                       RelativePanel.AlignLeftWithPanel="True"
                       Background="{ThemeResource SystemAccentColor}">

            <!--Narrow view-->
            <ScrollViewer x:Name="NarrowTripView"
                          x:DeferLoadStrategy="Lazy"
                          Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                          DataContext="{x:Bind ViewModel.TripFormViewModel, Mode=OneWay}"                                                       
                          RelativePanel.AlignTopWithPanel="True"
                          RelativePanel.AlignBottomWithPanel="True"
                          RelativePanel.AlignLeftWithPanel="True"
                          RelativePanel.AlignRightWithPanel="True"
                          Visibility="Collapsed"                          
                          VerticalAlignment="Stretch" 
                          VerticalContentAlignment="Stretch"
                          VerticalScrollBarVisibility="Auto">
                <Grid Margin="10 0 10 0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <ContentControl x:Name="NarrowTopPanelHalfControl"
                                    Grid.Row="0" 
                                    Grid.ColumnSpan="2"
                                    HorizontalAlignment="Stretch" 
                                    HorizontalContentAlignment="Stretch"
                                    ContentTemplate="{StaticResource TopPanelHalf}"/>

                    <RadioButton x:Name="DepartureRadioButonNarrow"
                                 Grid.Row="1"                                     
                                 Content="{Binding TimeType_Departure, Source={StaticResource Strings}}"
                                 GroupName="TimeTypeNarrow"
                                 HorizontalAlignment="Center" 
                                 IsChecked="{x:Bind ViewModel.TripFormViewModel.IsDepartureChecked, Mode=TwoWay}"                                                                          
                                 Visibility="{x:Bind ViewModel.TripFormViewModel.IsUsingCurrentTime, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverterInverted}}"
                                 Margin="0 10 0 0">
                        <Interactivity:Interaction.Behaviors>
                            <lclBhvrs:AnimateVisibilityBehavior/>
                        </Interactivity:Interaction.Behaviors>
                    </RadioButton>

                    <RadioButton x:Name="ArrivalRadioButtonNarrow"
                                 Grid.Row="1"
                                 Grid.Column="1"
                                 Content="{Binding TimeType_Arrival, Source={StaticResource Strings}}"
                                 GroupName="TimeTypeNarrow"                                        
                                 HorizontalAlignment="Center" 
                                 IsChecked="{x:Bind ViewModel.TripFormViewModel.IsArrivalChecked, Mode=TwoWay}"
                                 Visibility="{x:Bind ViewModel.TripFormViewModel.IsUsingCurrentTime, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverterInverted}}"
                                 Margin="0 10 0 0">
                        <Interactivity:Interaction.Behaviors>
                            <lclBhvrs:AnimateVisibilityBehavior/>
                        </Interactivity:Interaction.Behaviors>
                    </RadioButton>

                    <ContentControl x:Name="BottomPanelHalfContent" 
                                    Grid.Row="2" 
                                    Grid.ColumnSpan="2"
                                    ContentTemplate="{StaticResource BottomPanelHalf}"
                                    DataContext="{x:Bind ViewModel.TripFormViewModel, Mode=OneWay}"
                                    HorizontalAlignment="Stretch" 
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch">
                        <ContentControl.Transitions>
                            <TransitionCollection>
                                <RepositionThemeTransition/>
                            </TransitionCollection>
                        </ContentControl.Transitions>
                    </ContentControl>
                </Grid>
            </ScrollViewer>

            <!--We're shading the accent-colored background this way, because it allows us to 
            use a background of SystemAccentColor, and shade it without using a shaded brush, 
            which would fail to change if the user changed accent color while the app was running.-->
            <Rectangle x:Name="OpacityRectangle"
                  x:DeferLoadStrategy="Lazy"
                  Visibility="Collapsed"
                  Opacity="0.3"
                  Fill="{ThemeResource ApplicationForegroundThemeBrush}"
                  IsHitTestVisible="False"
                  RelativePanel.AlignTopWithPanel="True"
                  RelativePanel.AlignBottomWithPanel="True"
                  RelativePanel.AlignRightWithPanel="True"
                  RelativePanel.AlignLeftWithPanel="True"/>

            <!--Wide view-->
            <Hub x:Name="WideHub"
                 x:DeferLoadStrategy="Lazy"
                 Visibility="Collapsed"
                 ScrollViewer.HorizontalScrollBarVisibility="Auto"
                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                 RelativePanel.AlignTopWithPanel="True"
                 RelativePanel.AlignBottomWithPanel="True">

                <HubSection x:Name="WideTripFormSection"                            
                            Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                            Header="{Binding TripForm_PlanATripHeader, Source={StaticResource Strings}}"
                            Margin="10 10 10 20"
                            HorizontalAlignment="Center"
                            VerticalContentAlignment="Stretch">
                    <HubSection.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" Style="{StaticResource HeaderTextBlockStyle}"/>
                        </DataTemplate>
                    </HubSection.HeaderTemplate>
                    <HubSection.ContentTemplate>
                        <DataTemplate x:DataType="vm:MainViewModel">
                            <ScrollViewer Margin="-10 -15 -10 5"
                                          VerticalScrollBarVisibility="Auto"
                                          VerticalAlignment="Stretch">
                                <ContentControl x:Name="TripPlannerWideForm"          
                                            Margin="20 0 20 10"                                  
                                            DataContext="{x:Bind TripFormViewModel}"
                                            HorizontalContentAlignment="Stretch"    
                                            VerticalAlignment="Stretch"
                                            VerticalContentAlignment="Stretch"
                                            Width="450">

                                    <ContentControl.Content>
                                        <Grid VerticalAlignment="Stretch">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>

                                            <ContentControl Grid.Row="1"
                                                HorizontalAlignment="Stretch" 
                                                HorizontalContentAlignment="Stretch"
                                                ContentTemplate="{StaticResource TopPanelHalf}"/>

                                            <StackPanel x:Name="WideRadioButtonStackPanel" 
                                                        Grid.Row="2" 
                                                        Visibility="{x:Bind TripFormViewModel.IsUsingCurrentTime, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverterInverted}}"
                                                        Orientation="Horizontal" 
                                                        HorizontalAlignment="Center" 
                                                        Margin="0 10 0 0">
                                                <Interactivity:Interaction.Behaviors>
                                                    <lclBhvrs:AnimateVisibilityBehavior/>
                                                </Interactivity:Interaction.Behaviors>

                                                <RadioButton x:Name="DepartureRadioButonWide"
                                                             GroupName="TimeTypeWide"
                                                             Content="{Binding TimeType_Departure, Source={StaticResource Strings}}"
                                                             IsChecked="{x:Bind TripFormViewModel.IsDepartureChecked, Mode=TwoWay}" />
                                                <RadioButton x:Name="ArrivalRadioButtonWide"
                                                             GroupName="TimeTypeWide"
                                                             Content="{Binding TimeType_Arrival, Source={StaticResource Strings}}"
                                                             IsChecked="{x:Bind TripFormViewModel.IsArrivalChecked, Mode=TwoWay}" />
                                            </StackPanel>

                                            <ContentPresenter Grid.Row="3" 
                                                          ContentTemplate="{StaticResource BottomPanelHalf}"
                                                          DataContext="{x:Bind TripFormViewModel, Mode=OneWay}"
                                                          HorizontalAlignment="Stretch" 
                                                          HorizontalContentAlignment="Stretch"
                                                          VerticalAlignment="Stretch"
                                                          VerticalContentAlignment="Stretch">
                                                <ContentPresenter.Transitions>
                                                    <TransitionCollection>
                                                        <RepositionThemeTransition/>
                                                    </TransitionCollection>
                                                </ContentPresenter.Transitions>
                                            </ContentPresenter>
                                        </Grid>
                                    </ContentControl.Content>
                                </ContentControl>
                            </ScrollViewer>
                        </DataTemplate>
                    </HubSection.ContentTemplate>
                </HubSection>

                <HubSection x:Name="TripResultTripResultHubSection" 
                            Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                            DataContext="{x:Bind ViewModel.TripResultViewModel, Mode=OneWay}"                            
                            Margin="10 10 10 20"                            
                            HorizontalAlignment="Center"
                            VerticalContentAlignment="Stretch"  
                            Style="{StaticResource HubSectionCustomHeaderStyle}"
                            Visibility="Collapsed">
                    <HubSection.HeaderTemplate>
                        <DataTemplate x:DataType="vm:TripResultViewModel">
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.ChildrenTransitions>
                                    <TransitionCollection>
                                        <RepositionThemeTransition/>
                                    </TransitionCollection>
                                </StackPanel.ChildrenTransitions>
                                <Button Content="&#xE830;"                                                                                 
                                        Command="{x:Bind GoBackToTripListCommand}"
                                        FontSize="35"
                                        Height="50" Width="50"
                                        Margin="0 0 9 0"
                                        Style="{ThemeResource NavigationBackButtonNormalStyle}"                                                                        
                                        Visibility="{x:Bind IsInDetailedState, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                <TextBlock Text="{Binding Source={StaticResource Strings}, Path=TripResults_TripPlansHeader}" Style="{StaticResource HeaderTextBlockStyle}"/>
                            </StackPanel>
                        </DataTemplate>
                    </HubSection.HeaderTemplate>
                    <DataTemplate x:Name="TripResultTemplate" x:DataType="vm:TripResultViewModel">
                        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"                              
                              VerticalAlignment="Stretch">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <TextBlock x:Name="DestinationHeader"
                                       Grid.Row="0"                   
                                       FontSize="20"
                                       FontWeight="Bold"
                                       Margin="10"
                                       Style="{StaticResource SubheaderTextBlockStyle}">
                                <Run Text="{x:Bind FromName, Mode=OneWay}"/><Run Text=" → "/><Run Text="{x:Bind ToName, Mode=OneWay}"/>
                            </TextBlock>

                            <lclCtls:TripResultContent x:Name="TripResultsPanel"
                                                     Grid.Row="1"
                                                     DataContext="{x:Bind Mode=OneWay}"
                                                     Margin="-10 0 -10 5"/>
                        </Grid>
                    </DataTemplate>
                </HubSection>

            </Hub>
        </RelativePanel>
    </RelativePanel>

    <Page.BottomAppBar>
        <lclCtls:NavCommandBar x:Name="MainPageBottomBar"
                               x:DeferLoadStrategy="Lazy"
                               Visibility="Collapsed"/>
    </Page.BottomAppBar>

</lclCtls:AnimatedPage>

<!--For reference, delete when no longer necessary-->
<!--<controls:Resizer x:Name="parameterResizer" Margin="16,16,16,0"
                          RelativePanel.AlignLeftWithPanel="True"
                          RelativePanel.Below="pageHeader">

            <TextBox x:Name="EntryBox" MinWidth="150" MinHeight="62"
                     Header="HSL stop ID"
                     PlaceholderText="Ex: 1234567"                     
                     TextWrapping="Wrap">
                <Interactivity:Interaction.Behaviors>
                    -->
<!--  enable submit on enter key  -->
<!--
                    <Behaviors:KeyBehavior Key="Enter">
                        <Core:CallMethodAction MethodName="GotoDetailsPage" TargetObject="{Binding}" />
                    </Behaviors:KeyBehavior>
                    -->
<!--  focus on textbox when page loads  -->
<!--
                    <Core:EventTriggerBehavior>
                        <Behaviors:FocusAction />
                    </Core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </TextBox>

        </controls:Resizer>-->